FROM node:20.12.2-bullseye

# Define o diretório de trabalho dentro do container
WORKDIR /usr/src/app

# Copia os arquivos de configuração e dependências
COPY package*.json ./
COPY tsconfig.json ./
COPY .env ./

# Instala as dependências
RUN npm install

# Copia o restante do código da aplicação
COPY . .

# Verifica se os arquivos existem antes de dar permissão
RUN ls -la docker/ || echo "Pasta docker não encontrada"
RUN ls -la docker/entrypoint-local.sh || echo "entrypoint-local.sh não encontrado"
RUN ls -la docker/wait-for-it.sh || echo "wait-for-it.sh não encontrado"

# Copia os scripts condicionalmente
RUN if [ -f "docker/entrypoint-local.sh" ]; then \
        cp docker/entrypoint-local.sh ./entrypoint-local.sh && \
        chmod +x entrypoint-local.sh; \
    fi

RUN if [ -f "docker/wait-for-it.sh" ]; then \
        cp docker/wait-for-it.sh ./wait-for-it.sh && \
        chmod +x wait-for-it.sh; \
    fi

# Gera os arquivos do Prisma
RUN npx prisma generate

# Compila com o script local
RUN npm run build-local

EXPOSE 8081

# Comando para iniciar o Prisma e a aplicação
ENTRYPOINT ["./entrypoint-local.sh"]