#!/bin/bash
set -e

echo "=== Iniciando aplica√ß√£o ==="

# Carrega vari√°veis do arquivo .env
if [ -f .env ]; then
    echo "üìÑ Carregando vari√°veis do arquivo .env..."
    export $(cat .env | grep -v '^#' | xargs)
else
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado"
fi

# Debug: Mostra as vari√°veis de ambiente
echo "DATABASE_URL: $DATABASE_URL"
echo "NODE_ENV: $NODE_ENV"
echo "CORS_ORIGIN: $CORS_ORIGIN"

# Verifica se DATABASE_URL est√° definida
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERRO: DATABASE_URL n√£o est√° definida!"
    exit 1
fi

if [ -z "$NODE_ENV" ]; then
    echo "‚ùå ERRO: NODE_ENV n√£o est√° definida!"
    exit 1
fi

# Aguarda o MySQL estar dispon√≠vel
echo "‚è≥ Aguardando MySQL ficar dispon√≠vel..."
./wait-for-it.sh mysql:3306 --timeout=60 --strict -- echo "‚úÖ MySQL est√° dispon√≠vel!"

# Executa as migra√ß√µes do Prisma
echo "üóÑÔ∏è  Executando migra√ß√µes do Prisma..."
npx prisma migrate reset --force --skip-seed || true
npx prisma migrate dev --name init --skip-seed || true

# Executa o seed (opcional - remova se n√£o quiser sempre executar)
echo "üå± Executando seed..."
npx tsx prisma/seed.ts || true || echo "‚ö†Ô∏è  Seed falhou, mas continuando..."

# Inicia a aplica√ß√£o
echo "üöÄ Iniciando servidor..."
node dist/server.js
